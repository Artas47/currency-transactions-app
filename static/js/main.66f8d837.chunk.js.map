{"version":3,"sources":["components/transactions-list/transactions-list.styles.js","components/transaction/transaction.styles.js","selectors/selectors.js","components/transaction/transaction.js","actions/index.js","actions/types.js","components/transactions-list/transactions-list.js","components/top-transaction/top-transaction.styles.js","components/top-transaction/top-transaction.js","components/predictor/predictor.styles.js","components/predictor/predictor.js","App.styles.js","components/custom-button/custom-button.styles.js","components/custom-button/custom-button.js","components/modal/modal.styles.js","components/modal/modal.js","components/add-transaction-form/add-transaction-form.styles.js","components/add-transaction-form/add-transaction-form.js","App.js","reducers/currencyReducer.js","reducers/index.js","reducers/transactionReducer.js","index.js"],"names":["TransactionsList","styled","div","TransactionsListHeader","h1","List","TransactionsCount","Transaction","TransactionName","h2","TransactionAmountEuro","TransactionAmountPln","TransactionDelete","TransactionAmountBox","UpArrow","span","selectPlnRate","state","currency","plnRate","selectTransactions","Object","values","transactions","selectBiggestTransaction","arrOfAmounts","map","transaction","amount","find","Math","max","Number","transactionTitle","id","dispatch","useDispatch","useSelector","roundedAmount","round","data-testid","onClick","type","payload","removeTransaction","key","length","TopTransaction","TopTransactionArrow","TopTransactionHeader","TopTransactionTitle","h4","TopTransactionAmountBox","TopTransactionAmountEur","TopTransactionAmountPln","TopTransactionBox","TopTransactionEmpty","h3","biggestTransaction","topTransaction","Predictor","PredictorInput","input","Arrow","value","onChange","e","target","onInputChange","AppContainer","SideBar","CustomButton","button","props","primary","add","css","children","ModalContainer","Modal","ModalHeader","ModalContent","header","modalContent","ReactDOM","createPortal","document","body","Input","ErrorText","label","ButtonsContainer","Form","form","validate","errors","isNaN","AddTransactionForm","history","useHistory","validateOnChange","initialValues","onSubmit","actions","formValues","uuid","push","setSubmitting","handleChange","handleSubmit","htmlFor","name","App","path","style","textDecoration","to","INITIAL_STATE","combineReducers","action","_","omit","parseFloat","toFixed","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","render","getElementById"],"mappings":"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","file":"static/js/main.66f8d837.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const TransactionsList = styled.div`\n  height: 80vh;\n  min-width: 60vw;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3);\n\n  @media (max-width: 900px) {\n    width: 90%;\n  }\n`\n\nexport const TransactionsListHeader = styled.h1`\n  text-align: center;\n  padding: 4rem 0;\n  font-size: 3rem;\n`\n\nexport const List = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow-y: scroll;\n`\n\nexport const TransactionsCount = styled.div`\n  font-size: 2rem;\n  padding: 1rem 0;\n  text-align: center;\n`\n","import styled from 'styled-components'\n\nexport const Transaction = styled.div`\n  width: 80%;\n  height: 15rem;\n  font-size: 1.3rem;\n  background-color: #daf7d2;\n  display: flex;\n  flex-wrap: wrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 0 0.4rem 1rem rgba(0, 0, 0, 0.2);\n  border: 1px solid darkgrey;\n\n  :not(:last-child) {\n    margin-bottom: 3rem;\n  }\n\n  :last-child {\n    margin-bottom: 3rem;\n  }\n`\n\nexport const TransactionName = styled.h2`\n  margin-left: 5rem;\n  font-size: 2rem;\n  word-wrap: break-word;\n  width: 40%;\n  @media (max-width: 1300px) {\n    width: 30%;\n  }\n  @media (max-width: 1200px) {\n    margin-left: 2rem;\n  }\n  @media (max-width: 1000px) {\n    margin-left: 1rem;\n  }\n  margin-right: auto;\n`\n\nexport const TransactionAmountEuro = styled.h2``\nexport const TransactionAmountPln = styled.h1``\n\nexport const TransactionDelete = styled.h2`\n  margin-right: 5rem;\n  cursor: pointer;\n  @media (max-width: 1200px) {\n    margin-left: 2rem;\n  }\n  @media (max-width: 1000px) {\n    margin-left: 1rem;\n  }\n`\n\nexport const TransactionAmountBox = styled.div`\n  text-align: center;\n  margin-right: 4rem;\n`\n\nexport const UpArrow = styled.span`\n  font-size: 4rem;\n`\n","export const selectPlnRate = state => state.currency.plnRate\n\nexport const selectTransactions = state => Object.values(state.transactions)\n\nexport const selectBiggestTransaction = state => {\n  const arrOfAmounts = Object.values(state.transactions).map(transaction => {\n    return transaction.amount\n  })\n  const biggestTransaction = Object.values(state.transactions).find(\n    transaction => {\n      return transaction.amount >= Math.max(...arrOfAmounts.map(Number))\n    },\n  )\n  return biggestTransaction\n}\n","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {removeTransaction} from '../../actions/index'\nimport * as Styles from './transaction.styles'\nimport {selectPlnRate} from '../../selectors/selectors'\n\nconst Transaction = ({amount, transactionTitle, id}) => {\n  const dispatch = useDispatch()\n  const plnRate = useSelector(selectPlnRate)\n  const roundedAmount = Math.round(amount * 100) / 100\n  return (\n    <Styles.Transaction>\n      <Styles.TransactionName data-testid=\"transaction-title\">\n        {transactionTitle}\n      </Styles.TransactionName>\n      <Styles.TransactionAmountBox>\n        <Styles.TransactionAmountEuro data-testid=\"transaction-eur-amount\">\n          {roundedAmount}\n          (EUR)\n        </Styles.TransactionAmountEuro>\n        <Styles.UpArrow>&darr;</Styles.UpArrow>\n        <Styles.TransactionAmountPln data-testid=\"transaction-pln-amount\">\n          {Math.round(amount * plnRate * 100) / 100}\n          (PLN)\n        </Styles.TransactionAmountPln>\n      </Styles.TransactionAmountBox>\n      <Styles.TransactionDelete\n        data-testid=\"delete-button\"\n        onClick={() => dispatch(removeTransaction(id))}\n      >\n        X\n      </Styles.TransactionDelete>\n    </Styles.Transaction>\n  )\n}\n\nexport default Transaction\n\nTransaction.propTypes = {\n  amount: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  transactionTitle: PropTypes.string.isRequired,\n}\n","import {\n  ADD_TRANSACTION,\n  REMOVE_TRANSACTION,\n  INCREMENT_PLN,\n  DECREMENT_PLN,\n  CHANGE_PLN_RATE,\n} from './types'\n\nexport const addTransaction = (formValues, id) => {\n  return {\n    type: ADD_TRANSACTION,\n    payload: {id, formValues},\n  }\n}\n\nexport const removeTransaction = id => {\n  return {\n    type: REMOVE_TRANSACTION,\n    payload: id,\n  }\n}\n\nexport const incrementPlnRate = () => {\n  return {\n    type: INCREMENT_PLN,\n  }\n}\n\nexport const decrementPlnRate = () => {\n  return {\n    type: DECREMENT_PLN,\n  }\n}\n\nexport const changePlnRate = value => {\n  return {\n    type: CHANGE_PLN_RATE,\n    payload: value,\n  }\n}\n","export const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const REMOVE_TRANSACTION = 'REMOVE_TRANSACTION'\nexport const INCREMENT_PLN = 'INCREMENT_PLN'\nexport const DECREMENT_PLN = 'DECREMENT_PLN'\nexport const CHANGE_PLN_RATE = 'CHANGE_PLN_RATE'\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport * as Styles from './transactions-list.styles'\nimport Transaction from '../transaction/transaction'\nimport {selectTransactions} from '../../selectors/selectors'\n\nconst TransactionsList = () => {\n  const transactions = useSelector(selectTransactions)\n  return (\n    <Styles.TransactionsList>\n      <Styles.TransactionsListHeader>\n        TRANSACTIONS LIST\n      </Styles.TransactionsListHeader>\n      <Styles.List>\n        {transactions.map(transaction => {\n          return (\n            <Transaction\n              data-testid=\"transaction\"\n              key={transaction.id}\n              transactionTitle={transaction.transaction}\n              amount={transaction.amount}\n              id={transaction.id}\n            />\n          )\n        })}\n      </Styles.List>\n      <Styles.TransactionsCount data-testid=\"transactions-length\">\n        Transactions count:\n        {transactions.length}\n      </Styles.TransactionsCount>\n    </Styles.TransactionsList>\n  )\n}\n\nexport default TransactionsList\n","import styled from 'styled-components'\n\nexport const TopTransaction = styled.div`\n  background-color: white;\n  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\n  border: 2px solid darkgrey;\n  min-height: 25rem;\n  width: 60em;\n  @media (max-width: 1500px) {\n    width: 45rem;\n  }\n  @media (max-width: 900px) {\n    width: 65rem;\n  }\n  @media (max-width: 500px) {\n    width: 50rem;\n  }\n`\n\nexport const TopTransactionArrow = styled.span`\n  font-size: 3rem;\n`\n\nexport const TopTransactionHeader = styled.h2`\n  margin-top: 1.5rem;\n  text-align: center;\n  font-size: 2rem;\n`\n\nexport const TopTransactionTitle = styled.h4`\n  word-wrap: break-word;\n`\n\nexport const TopTransactionAmountBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const TopTransactionAmountEur = styled.div``\nexport const TopTransactionAmountPln = styled.div`\n  font-size: 2.5rem;\n`\n\nexport const TopTransactionBox = styled.div`\n  display: flex;\n  padding: 5rem 0;\n  align-items: center;\n  font-size: 1.7rem;\n  justify-content: space-around;\n`\n\nexport const TopTransactionEmpty = styled.h3`\n  font-size: 2rem;\n  color: darkgrey;\n`\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport * as Styles from './top-transaction.styles'\nimport {\n  selectPlnRate,\n  selectBiggestTransaction,\n} from '../../selectors/selectors'\n\nconst TopTransaction = () => {\n  const plnRate = useSelector(selectPlnRate)\n  const biggestTransaction = useSelector(selectBiggestTransaction)\n  const topTransaction = biggestTransaction ? (\n    <>\n      <Styles.TopTransactionTitle data-testid=\"top-transaction-title\">\n        {biggestTransaction.transaction}\n      </Styles.TopTransactionTitle>\n      <Styles.TopTransactionAmountBox>\n        <Styles.TopTransactionAmountEur data-testid=\"top-transaction-eur-amout\">\n          {Math.round(biggestTransaction.amount * 100) / 100}\n          (EUR)\n        </Styles.TopTransactionAmountEur>\n        <Styles.TopTransactionArrow>&darr;</Styles.TopTransactionArrow>\n        <Styles.TopTransactionAmountPln>\n          {Math.round(biggestTransaction.amount * plnRate * 100) / 100}\n          (PLN)\n        </Styles.TopTransactionAmountPln>\n      </Styles.TopTransactionAmountBox>\n    </>\n  ) : (\n    <Styles.TopTransactionEmpty data-testid=\"no-transactions-text\">\n      No transactions\n    </Styles.TopTransactionEmpty>\n  )\n  return (\n    <Styles.TopTransaction>\n      <Styles.TopTransactionHeader>\n        Biggest amount transaction\n      </Styles.TopTransactionHeader>\n      <Styles.TopTransactionBox>{topTransaction}</Styles.TopTransactionBox>\n    </Styles.TopTransaction>\n  )\n}\n\nexport default TopTransaction\n","import styled from 'styled-components'\n\nexport const Predictor = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4rem;\n  justify-content: center;\n`\n\nexport const PredictorInput = styled.input`\n  text-align: center;\n  width: 10rem;\n  font-size: 3rem;\n  ::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: textfield;\n  }\n`\n\nexport const Arrow = styled.span`\n  font-size: 5rem;\n  cursor: pointer;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`\n","import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport * as Styles from './predictor.styles'\nimport {\n  incrementPlnRate,\n  decrementPlnRate,\n  changePlnRate,\n} from '../../actions/index'\nimport {selectPlnRate} from '../../selectors/selectors'\n\nconst Predictor = () => {\n  const dispatch = useDispatch()\n  const plnRate = useSelector(selectPlnRate)\n  const onInputChange = e => {\n    dispatch(changePlnRate(e.target.value))\n  }\n  return (\n    <Styles.Predictor>\n      1 EURO =\n      <Styles.Arrow onClick={() => dispatch(incrementPlnRate())}>\n        &uarr;\n      </Styles.Arrow>\n      <Styles.PredictorInput\n        data-testid=\"plnRate-value\"\n        type=\"number\"\n        value={plnRate}\n        onChange={e => onInputChange(e)}\n      />\n      <Styles.Arrow onClick={() => dispatch(decrementPlnRate())}>\n        &darr;\n      </Styles.Arrow>\n    </Styles.Predictor>\n  )\n}\n\nexport default Predictor\n","import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`\n\nexport const SideBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`\n","import styled, {css} from 'styled-components'\n\nexport const CustomButton = styled.button`\n  width: 40%;\n  display: block;\n  margin-top: 2rem;\n  border: 1px solid darkgrey;\n  height: 5rem;\n  background-color: ${props => (props.primary ? 'lightgreen' : 'lightpink')};\n  ${props =>\n    props.add &&\n    css`\n      width: 60rem;\n      cursor: pointer;\n      border: 2px solid darkgrey;\n      font-size: 2rem;\n      background-color: white;\n      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\n      height: 6rem;\n      @media (max-width: 1500px) {\n        width: 45rem;\n      }\n      @media (max-width: 900px) {\n        width: 65rem;\n      }\n      @media (max-width: 500px) {\n        width: 50rem;\n      }\n    `}\n`\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport * as Styles from './custom-button.styles'\n\nconst CustomButton = props => {\n  return <Styles.CustomButton {...props}>{props.children}</Styles.CustomButton>\n}\n\nexport default CustomButton\n\nCustomButton.propTypes = {\n  children: PropTypes.string.isRequired,\n}\n","import styled from 'styled-components'\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba(24, 2, 2, 0.623);\n  z-index: 999;\n  width: 100%;\n  height: 100%;\n  transition: all 0.3s ease-out;\n  line-height: 2;\n`\n\nexport const Modal = styled.div`\n  position: absolute;\n  transition: all 1s;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  min-height: 50rem;\n  min-width: 50rem;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid darkgrey;\n`\n\nexport const ModalHeader = styled.h1`\n  font-size: 3rem;\n`\n\nexport const ModalContent = styled.div`\n  width: 100%;\n  height: 100%;\n  font-size: 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as Styles from './modal.styles'\n\nconst Modal = ({header, modalContent}) => {\n  return ReactDOM.createPortal(\n    <Styles.ModalContainer>\n      <Styles.Modal>\n        <Styles.ModalHeader>{header}</Styles.ModalHeader>\n        <Styles.ModalContent>{modalContent}</Styles.ModalContent>\n      </Styles.Modal>\n    </Styles.ModalContainer>,\n    document.body,\n  )\n}\n\nexport default Modal\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  padding: 1rem;\n  font-size: 2rem;\n  margin: 0 auto;\n  width: 90%;\n`\n\nexport const Label = styled.label`\n  text-align: center;\n`\n\nexport const ErrorText = styled.div`\n  color: red;\n  font-size: 2rem;\n`\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 3rem 0;\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n","import React from 'react'\nimport {Formik} from 'formik'\nimport {v4 as uuid} from 'uuid'\nimport {useDispatch} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport {addTransaction} from '../../actions/index'\nimport CustomButton from '../custom-button/custom-button'\nimport Modal from '../modal/modal'\nimport * as Styles from './add-transaction-form.styles'\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.transaction) {\n    errors.transaction = 'You must pass transaction name'\n  }\n  if (!values.amount) {\n    errors.amount = 'You must mass transaction amount'\n  }\n  if (Number.isNaN(Number(values.amount))) {\n    errors.amount = 'You must mass a valid amount'\n  }\n  return errors\n}\n\nconst AddTransactionForm = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const form = (\n    <div>\n      <Formik\n        validate={validate}\n        validateOnChange={false}\n        initialValues={{transaction: '', amount: ''}}\n        onSubmit={(values, actions) => {\n          dispatch(addTransaction(values, uuid()))\n          history.push('/')\n          actions.setSubmitting(false)\n        }}\n      >\n        {({handleChange, handleSubmit, values, errors}) => (\n          <Styles.Form onSubmit={handleSubmit}>\n            <label htmlFor=\"transaction\">Transaction name</label>\n            <Styles.Input\n              type=\"text\"\n              onChange={handleChange}\n              value={values.transaction}\n              data-testid=\"transaction-input\"\n              name=\"transaction\"\n              id=\"transaction\"\n            />\n            {errors.transaction && (\n              <Styles.ErrorText data-testid=\"transaction-error-text\">\n                {errors.transaction}\n              </Styles.ErrorText>\n            )}\n            <label htmlFor=\"amount\">Amount</label>\n            <Styles.Input\n              type=\"text\"\n              onChange={handleChange}\n              value={values.amount}\n              data-testid=\"amount-input\"\n              name=\"amount\"\n              id=\"amount\"\n            />\n            {errors.amount && (\n              <Styles.ErrorText data-testid=\"amount-error-text\">\n                {errors.amount}\n              </Styles.ErrorText>\n            )}\n            <Styles.ButtonsContainer>\n              <CustomButton primary data-testid=\"submit-button\" type=\"submit\">\n                Add\n              </CustomButton>\n              <CustomButton onClick={() => history.push('/')} type=\"button\">\n                Cancel\n              </CustomButton>\n            </Styles.ButtonsContainer>\n          </Styles.Form>\n        )}\n      </Formik>\n    </div>\n  )\n  return <Modal header=\"Add transaction\" modalContent={form} />\n}\nexport default AddTransactionForm\n","import React from 'react'\nimport './App.css'\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport TransactionsList from './components/transactions-list/transactions-list'\nimport TopTransaction from './components/top-transaction/top-transaction'\nimport Predictor from './components/predictor/predictor'\nimport * as Styles from './App.styles'\nimport CustomButton from './components/custom-button/custom-button'\nimport AddTransactionForm from './components/add-transaction-form/add-transaction-form'\n\nconst App = () => {\n  return (\n    <Styles.AppContainer>\n      <Router>\n        <Route path=\"/\">\n          <TransactionsList />\n          <Styles.SideBar>\n            <Predictor />\n            <Link style={{textDecoration: 'none'}} to=\"/addTransaction\">\n              <CustomButton add>Add Transaction</CustomButton>\n            </Link>\n            <TopTransaction />\n          </Styles.SideBar>\n        </Route>\n        <Route path=\"/addTransaction\">\n          <AddTransactionForm />\n        </Route>\n      </Router>\n    </Styles.AppContainer>\n  )\n}\n\nexport default App\n","import {INCREMENT_PLN, DECREMENT_PLN, CHANGE_PLN_RATE} from '../actions/types'\n\nconst INITIAL_STATE = {plnRate: 4.3}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case INCREMENT_PLN:\n      return {\n        ...state,\n        plnRate: parseFloat((state.plnRate + 0.01).toFixed(2)),\n      }\n    case DECREMENT_PLN:\n      return {\n        ...state,\n        plnRate: parseFloat((state.plnRate - 0.01).toFixed(2)),\n      }\n    case CHANGE_PLN_RATE:\n      return {...state, plnRate: action.payload}\n    default:\n      return {...state}\n  }\n}\n","import {combineReducers} from 'redux'\nimport transaction from './transactionReducer'\nimport currencyReducer from './currencyReducer'\n\nexport default combineReducers({\n  transactions: transaction,\n  currency: currencyReducer,\n})\n","import _ from 'lodash'\nimport {ADD_TRANSACTION, REMOVE_TRANSACTION} from '../actions/types'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_TRANSACTION:\n      return {\n        ...state,\n        [action.payload.id]: {\n          id: action.payload.id,\n          ...action.payload.formValues,\n        },\n      }\n    case REMOVE_TRANSACTION:\n      return _.omit(state, action.payload)\n    default:\n      return {...state}\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport App from './App'\nimport reducers from './reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}